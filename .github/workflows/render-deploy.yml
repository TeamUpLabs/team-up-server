name: CI & Deploy FastAPI to Render

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: "sqlite:///./test.db"
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Create GitHub Deployment
        id: deployment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              auto_merge: false,
              required_contexts: [],
              environment: 'production',
              transient_environment: false,
              production_environment: true
            });
            
            return deployment.id;
          
      - name: Trigger Render Deploy
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d3gisdvfte5s73c6obl0" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Accept: application/json"

      - name: Update deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const { data: status } = await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'success',
              auto_inactive: false
            });
            return status;